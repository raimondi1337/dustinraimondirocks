<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Dustin Raimondi</title><link href="dustin.raimondi.rocks/" rel="alternate"></link><link href="dustin.raimondi.rocks/feeds/technology.atom.xml" rel="self"></link><id>dustin.raimondi.rocks/</id><updated>2016-08-08T00:00:00-04:00</updated><entry><title>my first post</title><link href="dustin.raimondi.rocks/my-first-post.html" rel="alternate"></link><updated>2016-08-08T00:00:00-04:00</updated><author><name>Dustin</name></author><id>tag:,2016-08-08:dustin.raimondi.rocks/my-first-post.html</id><summary type="html">&lt;p&gt;I decided to rework my personal site due to my impeding graduation, as well as the acquisition of my awesome new domain. My old site was what I wanted, but I wrote that in static HTML as a freshman and adding one item meant manually editing upwards of 6 pages, so I decided to start from scratch. I don't need a CMS for this tiny site, so a static site generator seemed like the best way to go. I spun up about 8 different NodeJS and Python generators until I found one that worked the way I thought one should and that turned out to be Pelican. It's basically everything I wanted. Write a Markdown file for the page or blogpost, dump any relevant images into the images directory and type go, there's a new page on the site that matches everything else.&lt;/p&gt;
&lt;p&gt;I've been considering moving the chronicling of my projects in both the computing realm and the motorcycling realm to a blog as I've become increasingly dissatisfied with Facebook, so I figured now was as good a time as any.&lt;/p&gt;</summary><category term="pelican"></category><category term="portfolio"></category></entry><entry><title>My first bash script</title><link href="dustin.raimondi.rocks/my-first-bash-script.html" rel="alternate"></link><updated>2016-03-06T05:35:57-05:00</updated><author><name>Dustin</name></author><id>tag:,2016-03-06:dustin.raimondi.rocks/my-first-bash-script.html</id><summary type="html">&lt;p&gt;Somehow I've never written a bash script before. The only way to create a new blog post with Pelican is to create a Markdown file in /content, and I wanted to name every file with the date and time, and add the date and time to the metadata of the post, so I wrote a little script to create the file with the necessary metadata tags. Bash is easy and simple, kid of reminds me of Python.&lt;/p&gt;</summary><category term="bash"></category><category term="script"></category><category term="firsts"></category></entry></feed>